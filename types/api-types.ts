/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */

export interface paths {
    "/": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: operations["AppController_getHello"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/auth/admin-login": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        post: operations["AuthController_adminLogin"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/auth/login-otp": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        post: operations["AuthController_checkOtp"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/auth/user-login": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        post: operations["AuthController_userLogin"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/admins": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: operations["AdminsController_create"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/admins/add-admin": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        post: operations["AdminsController_createAdmin"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/admins/update-admin-details/{adminId}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put: operations["AdminsController_updateAdmin"];
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/branches": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: operations["BranchesController_findAll"];
        put?: never;
        post: operations["BranchesController_create"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/branches/{id}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: operations["BranchesController_findOne"];
        put?: never;
        post?: never;
        delete: operations["BranchesController_remove"];
        options?: never;
        head?: never;
        patch: operations["BranchesController_update"];
        trace?: never;
    };
    "/users": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: operations["UsersController_findAll"];
        put?: never;
        post: operations["UsersController_create"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/users/{id}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: operations["UsersController_findOne"];
        put?: never;
        post?: never;
        delete: operations["UsersController_remove"];
        options?: never;
        head?: never;
        patch: operations["UsersController_update"];
        trace?: never;
    };
}
export type webhooks = Record<string, never>;
export interface components {
    schemas: {
        AdminLoginDto: {
            /**
             * @description enter valid phone number
             * @example 091243567950
             */
            phoneNumber: string;
        };
        OTPLogin: {
            /**
             * @description enter valid phone number
             * @example 091243567950
             */
            phoneNumber: string;
            /**
             * @description otp
             * @example 56734
             */
            otp: string;
        };
        UserLoginDto: {
            /**
             * @description enter valid phone number
             * @example 5546530945
             */
            phoneNumber: number;
        };
        CreateAdminDto: {
            /** @example admin */
            name?: string;
            /** @example admin */
            lastName?: string;
            /** @example something about admin */
            description?: string;
            /** @example 09125476123 */
            phone: string;
            branchId: number;
            /** @example admin */
            role: string;
        };
        AdminEntity: Record<string, never>;
        UpdateAdminDetailsDto: {
            /** @example admin */
            name?: string;
            /** @example admin */
            lastName?: string;
            /** @example something about admin */
            description?: string;
            branchId?: number;
            /** @example admin */
            role?: string;
        };
        CreateBranchDto: {
            /**
             * @description branch name
             * @example first branch
             */
            name: string;
            address?: string;
            phone?: string;
            description?: string;
        };
        UpdateBranchDto: Record<string, never>;
        CreateUserDto: Record<string, never>;
        UpdateUserDto: Record<string, never>;
    };
    responses: never;
    parameters: never;
    requestBodies: never;
    headers: never;
    pathItems: never;
}
export type $defs = Record<string, never>;
export interface operations {
    AppController_getHello: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    AuthController_adminLogin: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["AdminLoginDto"];
            };
        };
        responses: {
            201: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    AuthController_checkOtp: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["OTPLogin"];
            };
        };
        responses: {
            201: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    AuthController_userLogin: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["UserLoginDto"];
            };
        };
        responses: {
            201: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    AdminsController_create: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    AdminsController_createAdmin: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["CreateAdminDto"];
            };
        };
        responses: {
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    /** @example {
                     *       "phone": "09124323435",
                     *       "role": "employee",
                     *       "name": null,
                     *       "lastName": null,
                     *       "id": 5,
                     *       "branchId": 1,
                     *       "description": "something about admin",
                     *       "isArchive": false,
                     *       "createdAt": "2025-05-08T16:21:06.730Z",
                     *       "updatedAt": "2025-05-08T16:21:06.730Z"
                     *     } */
                    "application/json": components["schemas"]["AdminEntity"];
                };
            };
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    /** @example [
                     *       {
                     *         "message": "admin with phone 09124323435 already exists",
                     *         "error": "Bad Request",
                     *         "statusCode": 400
                     *       },
                     *       {
                     *         "message": "admin is not allowed to create admin",
                     *         "error": "Bad Request",
                     *         "statusCode": 400
                     *       },
                     *       {
                     *         "message": "admin role just could be employee or admin",
                     *         "error": "Bad Request",
                     *         "statusCode": 400
                     *       }
                     *     ] */
                    "application/json": unknown;
                };
            };
        };
    };
    AdminsController_updateAdmin: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                adminId: number;
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["UpdateAdminDetailsDto"];
            };
        };
        responses: {
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    /** @example {
                     *       "id": 11,
                     *       "phone": "346456575",
                     *       "branchId": 2,
                     *       "name": "farzin",
                     *       "role": "admin",
                     *       "lastName": null,
                     *       "isArchive": false,
                     *       "description": "something about admin",
                     *       "createdAt": "2025-05-09T08:45:10.261Z",
                     *       "updatedAt": "2025-05-09T09:47:26.000Z"
                     *     } */
                    "application/json": components["schemas"]["AdminEntity"];
                };
            };
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    /** @example [
                     *       {
                     *         "message": "update superadmin is not possible",
                     *         "error": "Bad Request",
                     *         "statusCode": 400
                     *       },
                     *       {
                     *         "message": "you can just update employees",
                     *         "error": "Bad Request",
                     *         "statusCode": 400
                     *       }
                     *     ] */
                    "application/json": unknown;
                };
            };
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    /** @example [
                     *       {
                     *         "message": "invalid adminId",
                     *         "error": "Not Found",
                     *         "statusCode": 404
                     *       },
                     *       {
                     *         "message": "invalid branch id",
                     *         "error": "Not Found",
                     *         "statusCode": 404
                     *       }
                     *     ] */
                    "application/json": unknown;
                };
            };
        };
    };
    BranchesController_findAll: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    BranchesController_create: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["CreateBranchDto"];
            };
        };
        responses: {
            201: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    BranchesController_findOne: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                id: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    BranchesController_remove: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                id: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    BranchesController_update: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                id: string;
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["UpdateBranchDto"];
            };
        };
        responses: {
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    UsersController_findAll: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    UsersController_create: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["CreateUserDto"];
            };
        };
        responses: {
            201: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    UsersController_findOne: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                id: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    UsersController_remove: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                id: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    UsersController_update: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                id: string;
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["UpdateUserDto"];
            };
        };
        responses: {
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
}
